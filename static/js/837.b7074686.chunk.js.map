{"version":3,"file":"static/js/837.b7074686.chunk.js","mappings":"+LACA,SAAgB,QAAU,yBAAyB,aAAe,8BAA8B,QAAU,yBAAyB,aAAe,+B,aCAlJ,QAAgC,kCAAhC,EAA2E,2B,aCG3E,MAaA,EAboBA,IAClB,IAAIC,EAAI,YAAAC,OAAeF,EAAMG,IAE7B,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAoBC,UAClCC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAIT,EAAKM,SAAA,EAChBH,EAAAA,EAAAA,KAAA,OAAKO,IAAKX,EAAMY,OAAQP,UAAWC,IAClCN,EAAMa,SAEL,ECEV,EAZiBb,IAEbI,EAAAA,EAAAA,KAAA,OAAKC,UAAaC,EAAMQ,OACxBR,MAAO,CACLS,UAAW,OACXC,MAAO,WACPT,SACCP,EAAMiB,UC6Eb,EAhFiBjB,IAEf,IAAIkB,EAAkBlB,EAAMmB,YAAYC,QAAQC,KAAIP,IACzCV,EAAAA,EAAAA,KAACkB,EAAU,CAERT,KAAMC,EAAOD,KACbV,GAAKW,EAAOX,GACZS,OAAUE,EAAOS,KAHZT,EAAOX,MAQtBqB,EAAmBxB,EAAMmB,YAAYM,SAASJ,KAAIK,IAC3CtB,EAAAA,EAAAA,KAACuB,EAAO,CAAeV,QAASS,EAAKT,SAAvBS,EAAKvB,MAS9B,OACEK,EAAAA,EAAAA,MAAA,OAAKH,UAAYC,EAAMc,QAAQb,SAAA,EAC7BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAMsB,aAAarB,SAC/BW,KAGJd,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAMmB,SAASlB,UAC7BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,IAAEiB,GAGPpB,EAAAA,EAAAA,KAACyB,EAAAA,GAAM,CACLC,cAAe,CAAEb,QAAS,IAC1Bc,SAAUC,IACR,MAAMC,EAAS,CAAC,EAIhB,OAHID,EAAOf,UACTgB,EAAOhB,QAAU,iBAEZgB,CAAM,EAEfC,SAxBiBC,CAACH,EAAMI,KAAmB,IAAjB,UAACC,GAAUD,EAC3CpC,EAAMsC,YAAYN,EAAOf,SACzBoB,GAAW,EAuBLE,gBAAgB,EAChBC,kBAAkB,EAAMjC,SAEvBkC,IAAA,IAAC,OACAT,EAAM,OACNC,EAAM,aACNS,EAAY,aACZC,GACDF,EAAA,OACCjC,EAAAA,EAAAA,MAACoC,EAAAA,GAAI,CAACV,SAAUQ,EAAanC,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAACyC,EAAAA,GAAK,CACJC,KAAK,OACLjC,KAAK,UACLR,UAAWC,EAAMyC,QACjBC,YAAY,qBACZC,aAAa,MACbC,SAAUP,EACVQ,MAAOnB,EAAOf,WAEhBb,EAAAA,EAAAA,KAACgD,EAAAA,GAAY,CACX/C,UAAWC,EAAM+C,aACjBxC,KAAK,UAAUyC,UAAU,YAG7BlD,EAAAA,EAAAA,KAAA,OAAAG,UACAH,EAAAA,EAAAA,KAAA,UAAQ0C,KAAK,SAAQvC,SAAC,uBAEnB,WAMT,EC9DR,SAAegD,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAfqBC,IACd,CACLtC,YAAasC,EAAMtC,YACnBuC,eAAgBD,EAAMtC,YAAYuC,mBAGZC,IACjB,CACLrB,YAAcoB,IACZC,GAASC,EAAAA,EAAAA,GAAmBF,GAAgB,MAOhDG,EAAAA,EAFF,CAGEC,E","sources":["webpack://react-samurai/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-samurai/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__q3D31\",\"dialogsItems\":\"Dialogs_dialogsItems__GkbuY\",\"texting\":\"Dialogs_texting__ovhGG\",\"errorMessage\":\"Dialogs_errorMessage__Do59v\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogSection\":\"DialogItem_dialogSection__cWUT9\",\"avatar\":\"DialogItem_avatar__uCKmi\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport style from './DialogItem.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n  let path = `/dialogs/${props.id}`\r\n  \r\n  return (\r\n    <div className={style.dialogSection}>\r\n      <NavLink to={path}> \r\n        <img src={props.avatar} className={style.avatar} />\r\n        {props.name} \r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport style from '../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className = {style.dialog}\r\n    style={{\r\n      marginTop: '10px',\r\n      color: '#36454F'\r\n    }} > \r\n      {props.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message ","import React from 'react'\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let dialogsElements = props.dialogsPage.dialogs.map(dialog => {\r\n      return <DialogItem \r\n                key={dialog.id}\r\n                name={dialog.name} \r\n                id ={dialog.id} \r\n                avatar = {dialog.img} \r\n              />\r\n    }\r\n  )\r\n\r\n  let messagesElements = props.dialogsPage.messages.map(item => {\r\n      return <Message key={item.id} message={item.message} />\r\n    }\r\n  )\r\n\r\n  let onSendMessageClick = (values, {resetForm}) => {\r\n    props.sendMessage(values.message)\r\n    resetForm()\r\n  }\r\n\r\n  return (\r\n    <div className= {style.dialogs}>\r\n      <div className={style.dialogsItems}>\r\n        { dialogsElements }\r\n      </div>\r\n\r\n      <div className={style.messages}>\r\n        <div> {messagesElements} \r\n\r\n          \r\n        <Formik\r\n          initialValues={{ message: ''}}\r\n          validate={values => {\r\n            const errors = {}\r\n            if(!values.message) {\r\n              errors.message = \"Empty message\"\r\n            }\r\n            return errors\r\n          }}\r\n          onSubmit = {onSendMessageClick}\r\n          validateOnBlur={false}\r\n          validateOnChange={false}\r\n        >\r\n          {({\r\n            values, \r\n            errors, \r\n            handleSubmit,\r\n            handleChange\r\n          }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <div>\r\n                <Field \r\n                  type='text'\r\n                  name='message'\r\n                  className={style.texting} \r\n                  placeholder=\"Enter your message\"\r\n                  autocomplete='off'\r\n                  onChange={handleChange}\r\n                  value={values.message}\r\n                />\r\n                <ErrorMessage \r\n                  className={style.errorMessage}\r\n                  name='message' component='div' />\r\n              </div>\r\n\r\n              <div> \r\n              <button type='submit'> Send message </button> \r\n            </div>\r\n          </Form>\r\n        )\r\n        } \r\n      </Formik>\r\n    </div>\r\n  </div>          \r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport Dialogs from './Dialogs'\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n    newMessageBody: state.dialogsPage.newMessageBody\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)"],"names":["props","path","concat","id","_jsx","className","style","children","_jsxs","NavLink","to","src","avatar","name","dialog","marginTop","color","message","dialogsElements","dialogsPage","dialogs","map","DialogItem","img","messagesElements","messages","item","Message","dialogsItems","Formik","initialValues","validate","values","errors","onSubmit","onSendMessageClick","_ref","resetForm","sendMessage","validateOnBlur","validateOnChange","_ref2","handleSubmit","handleChange","Form","Field","type","texting","placeholder","autocomplete","onChange","value","ErrorMessage","errorMessage","component","compose","connect","state","newMessageBody","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}